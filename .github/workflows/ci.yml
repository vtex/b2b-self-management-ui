name: Release Version

on:
  pull_request:
    types: [opened, synchronize]

jobs:
  request-version:
    runs-on: ubuntu-latest

    steps:
      - name: Add version selection comment
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `
              ## Please select the version update for the package:
              - 👍 Patch
              - 🎉 Minor
              - 🚀 Major

              React with the appropriate emoji to choose the version.
              `
            })

  check-version:
    runs-on: ubuntu-latest
    needs: request-version
    steps:
      - name: Check version bump reaction
        uses: actions/github-script@v6
        with:
          script: |
            const { data: reactions } = await github.rest.reactions.listForIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });

            let versionType = 'patch'; // default
            reactions.forEach(reaction => {
              if (reaction.content === 'rocket') {
                versionType = 'major';
              } else if (reaction.content === 'tada') {
                versionType = 'minor';
              }
            });

            console.log(`Version to bump: ${versionType}`);
            core.setOutput('version_type', versionType);

  release:
    runs-on: ubuntu-latest
    needs: check-version
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org/'

      - name: Install dependencies
        run: yarn install

      - name: Bump version
        run: |
          yarn version --${{ needs.check-version.outputs.version_type }}

      - name: Build project
        run: yarn build

      - name: Publish to NPM
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          yarn publish --non-interactive

      - name: Push changes and tags
        run: |
          git push --follow-tags
